# Generated by Django 2.0 on 2018-05-22 08:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Datalogger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, verbose_name='编号')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '库存'), (2, '在线'), (3, '故障'), (4, '维修'), (5, '报废'), (6, '归还')], default=0, verbose_name='状态')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='DataloggerFeatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='数采特征')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='DataloggerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='数采型号')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='制造商名称')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='描述')),
            ],
        ),
        migrations.CreateModel(
            name='PowerSupply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=64, verbose_name='型号')),
                ('number', models.IntegerField(default=0, verbose_name='数量')),
                ('inventory', models.IntegerField(default=0, verbose_name='库存')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, verbose_name='编号')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '库存'), (2, '在线'), (3, '故障'), (4, '维修'), (5, '报废'), (6, '归还')], default=0, verbose_name='状态')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='SensorFeatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='地震仪特征')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='SensorModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='地震仪型号')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.Manufacturer', verbose_name='制造商')),
            ],
        ),
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('powersupply_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='equipment.PowerSupply')),
                ('voltage', models.FloatField(verbose_name='标称电压(V)')),
                ('capacity', models.FloatField(verbose_name='容量(Ah)')),
            ],
            bases=('equipment.powersupply',),
        ),
        migrations.CreateModel(
            name='Charger',
            fields=[
                ('powersupply_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='equipment.PowerSupply')),
                ('is_support_solar', models.BooleanField(verbose_name='是否支持太阳能')),
                ('is_support_electricity', models.BooleanField(verbose_name='是否支持市电')),
                ('is_support_battery', models.BooleanField(verbose_name='是否支持电瓶充电')),
            ],
            bases=('equipment.powersupply',),
        ),
        migrations.CreateModel(
            name='SolarPanel',
            fields=[
                ('powersupply_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='equipment.PowerSupply')),
                ('power', models.FloatField(verbose_name='功率')),
                ('width', models.FloatField(verbose_name='宽(mm)')),
                ('high', models.FloatField(verbose_name='高(mm)')),
            ],
            bases=('equipment.powersupply',),
        ),
        migrations.AddField(
            model_name='sensorfeatures',
            name='sensor_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.SensorModel', verbose_name='地震仪型号'),
        ),
        migrations.AddField(
            model_name='sensor',
            name='features',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.SensorFeatures', verbose_name='地震仪特征'),
        ),
        migrations.AddField(
            model_name='sensor',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.SensorModel', verbose_name='地震仪型号'),
        ),
        migrations.AddField(
            model_name='powersupply',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.Manufacturer', verbose_name='制造商'),
        ),
        migrations.AddField(
            model_name='dataloggermodel',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.Manufacturer', verbose_name='制造商'),
        ),
        migrations.AddField(
            model_name='dataloggerfeatures',
            name='datalogger_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.DataloggerModel', verbose_name='数采型号'),
        ),
        migrations.AddField(
            model_name='datalogger',
            name='features',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.DataloggerFeatures', verbose_name='数采特征'),
        ),
        migrations.AddField(
            model_name='datalogger',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.DataloggerModel', verbose_name='数采型号'),
        ),
    ]
